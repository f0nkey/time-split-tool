{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/store.js","../../src/Tooltip.svelte","../../src/SubTimer.svelte","../../src/TimerCard.svelte","../../src/CardArea.svelte","../../node_modules/js-cookie/src/js.cookie.js","../../src/Modal.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.31.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from 'svelte/store';\n\n// Used to makeup time when a user has closed to window and revisited.\nexport let lastCookieUpdate = writable(0)\nexport let loadedPage = writable(false);","<script>\n    export let text = \"\"\n    export let dir = \"left\"\n</script>\n\n<div class=\"parent\">\n    <slot></slot>\n    {#if dir === \"left\"}\n        <span class=\"tooltiptext\">{text}</span>\n    {:else}\n        <span style=\"right:80px;\" class=\"tooltiptext other\">{text}</span>\n    {/if}\n\n</div>\n\n<style>\n    .parent:hover .tooltiptext {\n        display: inline-block;\n    }\n    .tooltiptext {\n        display: none;\n        background: black;\n        color:white;\n        border-radius: 5px;\n        padding: 10px;\n        position: absolute;\n        z-index: 1000;\n        font-size: 1em;\n        width: fit-content;\n    }\n\n    .parent {\n        width:fit-content;\n        display:inline;\n    }\n</style>","<script>\n    import {createEventDispatcher} from 'svelte';\n    import {loadedPage} from \"./store\"\n    import {lastCookieUpdate} from \"./store\";\n    import Tooltip from \"./Tooltip.svelte\";\n\n    const dispatch = createEventDispatcher();\n\n    // todo: include notes for this\n\n    export let activated = false\n    export let ms = 0 // can be a float\n    export let kill = false;\n    export let name = \"\";\n    export let index = 0;\n    export let proportion = 1; // proportion of ms to full group's time\n    export let firstLoad = null; // set by the parent object\n    $: displaySeconds = msToTime(ms)\n\n    $: {\n        if(firstLoad && activated) {\n            let diff = Date.now() - $lastCookieUpdate;\n            let amtToAdd = proportion * diff;\n            console.log({diff}, {proportion}, {diff}, {amtToAdd})\n            ms += amtToAdd\n            firstLoad = false;\n        }\n    }\n\n    function msToTime(s) {\n        // Pad to 2 or 3 digits, default is 2\n        function pad(n, z) {\n            z = z || 2;\n            return ('00' + n).slice(-z);\n        }\n\n        var ms = s % 1000;\n        s = (s - ms) / 1000;\n        var secs = s % 60;\n        s = (s - secs) / 60;\n        var mins = s % 60;\n        var hrs = (s - mins) / 60;\n\n        return pad(hrs) + ':' + pad(mins) + ':' + pad(secs) + '.' + pad(Math.round(ms), 3);\n    }\n\n    function divDelete() {\n        dispatch(\"divdelete\", {ms: ms, index: index, killFunc: () =>{kill = true}})\n    }\n\n    let tickerHandle = 0;\n</script>\n\n<div class=\"container\">\n    <input type=\"text\" bind:value={name} placeholder=\"Control #\">\n    <span>{displaySeconds}</span>\n    {#if activated}\n        <button id=\"stop\" on:click={() => {activated = false}}>STOP</button>\n    {:else}\n        <button id=\"start\" on:click={() => {activated = true}}>START</button>\n    {/if}\n    <button class=\"delete\" on:click={() => {kill = true}}>DELETE</button>\n    <Tooltip text=\"Divide time amongst siblings after deletion.\" dir=\"left\">\n        <button class=\"delete\" on:click={divDelete}>DELETE & &div;</button>\n    </Tooltip>\n</div>\n\n<style>\n    .container {\n        position: relative;\n        display: grid;\n        align-items: center;\n        justify-items: center;\n        grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\n        background-color: lightgray;\n        justify-content: center;\n        border: 1px solid grey;\n        width: 100%;\n    }\n    span {\n        margin: 10px;\n    }\n    button {\n        margin: 2px auto;\n        color: #fff;\n        border: none;\n        border-radius: 5px;\n        width: fit-content;\n        font-size: 0.8em;\n        padding: 0.5em;\n    }\n    input {\n        margin: auto;\n        padding-top: 5px;\n        padding-left: 5px;\n        width: 6em;\n    }\n    #start {\n        background-color: forestgreen;\n    }\n    #stop {\n        background: red;\n    }\n    .delete {\n        background: darkred;\n    }\n</style>\n\n\n\n","<script>\n    import {createEventDispatcher, onMount} from \"svelte\"\n    import SubTimer from \"./SubTimer.svelte\";\n    import Tooltip from \"./Tooltip.svelte\";\n\n    const dispatch = createEventDispatcher();\n\n    export let subTimersProps = [];\n    export let groupName = \"\" // todo: make group name input focused onMount\n    let displayTime = 0;\n    let pause = false;\n\n    onMount(() => {\n        subTimersProps.forEach((timerProps) => {\n            timerProps.firstLoad = true\n        })\n    })\n\n    function randomName() {\n        //let adjectives = [\"Cool\", \"Dirty\", \"Broken\", \"Excellent\", \"Sweet\", \"Good\", \"Bad\", \"Righteous\", \"Neat\"];\n        let items = [\"Scanners\", \"Scanguns\", \"Keyboards\", \"Servers\", \"Tablets\", \"Laptops\", \"PCs\", \"Microphones\", \"Printers\", \"Mice\"];\n\n        function randBetween(min, max) {\n            return Math.floor(Math.random() * (max - min)) + min;\n        }\n\n        return items[randBetween(0, items.length - 1)];\n    }\n\n    setInterval(() => {\n        subTimersProps.forEach((timerProps, i) => {\n            if (timerProps.kill) {\n                subTimersProps.splice(i, 1)\n            }\n        })\n\n        let activatedAmt = 0;\n        subTimersProps.forEach(timerProps => {\n            if (timerProps.activated) {\n                activatedAmt++;\n            }\n        })\n\n        subTimersProps.forEach(timerProps => {\n            if (timerProps.activated) {\n                timerProps.ms += 25 / activatedAmt;\n            }\n        })\n\n        let totalTime = 0;\n        subTimersProps.forEach(timerProps => {\n            totalTime += timerProps.ms;\n        })\n\n        // set proportions\n        subTimersProps.forEach(timerProps => {\n            if (subTimersProps.length === 1) {\n                //timerProps.ms = (timerProps.ms / 2)\n                return;\n            }\n            let secondsProportion = timerProps.ms / totalTime\n            if (isNaN(secondsProportion)) secondsProportion = 0;\n            timerProps.proportion = secondsProportion;\n        })\n\n        displayTime = msToTime(totalTime)\n        subTimersProps = subTimersProps;\n    }, 25)\n\n    function setProportions() {\n\n    }\n\n    function msToTime(s) {\n        // Pad to 2 or 3 digits, default is 2\n        function pad(n, z) {\n            z = z || 2;\n            return ('00' + n).slice(-z);\n        }\n\n        var ms = s % 1000;\n        s = (s - ms) / 1000;\n        var secs = s % 60;\n        s = (s - secs) / 60;\n        var mins = s % 60;\n        var hrs = (s - mins) / 60;\n\n        return pad(hrs) + ':' + pad(mins) + ':' + pad(secs) + '.' + pad(Math.round(ms), 3);\n    }\n\n    function addTimer() {\n        let newSeconds = subtractProportional(subTimersProps)\n        let props = {\n            activated: true,\n            ms: newSeconds,\n            kill: false,\n            displayAreYouSure: false,\n            name: \"\",\n            index: subTimersProps.length,\n        }\n        subTimersProps = [...subTimersProps, props];\n    }\n\n    // Subtracts a proportional amount from each timer and returns what the new timer should be set to.\n    function subtractProportional(timersProps) {\n        let totalTime = 0;\n        timersProps.forEach((props) => {\n            totalTime += props.ms;\n        })\n\n        let newTimerSeconds = 0;\n\n        timersProps.forEach(timer => {\n            if (timersProps.length === 1) {\n                timer.ms = (timer.ms / 2)\n                newTimerSeconds = (timer.ms / 2);\n                return;\n            }\n            let secondsProportion = timer.ms / totalTime\n            if (isNaN(secondsProportion)) secondsProportion = 0;\n\n            let subtractBy = Math.ceil(secondsProportion * timer.ms)\n            timer.ms = timer.ms - subtractBy\n            newTimerSeconds += subtractBy;\n        })\n\n        newTimerSeconds = newTimerSeconds / 2\n\n        // put half of newTimerSeconds back amongst the incumbent timers\n        timersProps.forEach(timer => {\n            timer.ms = timer.ms + ((timersProps.length + 1) / 2)\n        })\n\n        return newTimerSeconds\n    }\n\n    function deactivateAll() {\n        subTimersProps.forEach(timerProps => {\n            timerProps.activated = false\n            pause = true;\n        })\n    }\n\n    function activateAll() {\n        subTimersProps.forEach(timerProps => {\n            pause = false;\n            timerProps.activated = true\n        })\n    }\n\n    function handleDivDelete(e) {\n        let divAmount = e.detail.ms / (subTimersProps.length - 1);\n        console.log(\"div del detected\", subTimersProps.length - 1, {divAmount}, e.detail.ms, e.detail.ms / subTimersProps.length - 1)\n\n        subTimersProps.forEach((timerProps, i) => {\n            if (i === e.detail.index) return;\n            timerProps.ms += divAmount;\n        })\n        e.detail.killFunc();\n        subTimersProps = subTimersProps;\n    }\n\n    function fireDeleteEvent() {\n        if (confirm(\"Are you sure want to delete this group?\")) {\n            dispatch(\"delete\")\n        }\n    }\n</script>\n\n<div>\n    <label>\n        Group Name:\n        <input type=\"text\" bind:value={groupName} placeholder=\"Group Name\">\n    </label>\n\n    <button id=\"exit\" on:click={fireDeleteEvent}>&times;</button>\n\n    <h2>Total Time: {displayTime}</h2>\n    <h5>Every second is divided amongst all sub-timers.<br>This helps when doing multiple CNs at once.</h5>\n\n    <Tooltip text=\"New timers take a proportional amount of time from each sub-timer. \"><button on:click={addTimer}>Add Sub-timer</button></Tooltip>\n    {#if pause}\n        <button on:click={activateAll}>Start All</button>\n    {:else}\n        <button on:click={deactivateAll}>Pause All</button>\n    {/if}\n        {#each subTimersProps as props}\n            <SubTimer\n                    bind:activated={props.activated}\n                    bind:ms={props.ms}\n                    bind:kill={props.kill}\n                    bind:name={props.name}\n                    index={props.index}\n                    bind:proportion={props.proportion}\n                    bind:firstLoad={props.firstLoad}\n                    on:divdelete={handleDivDelete}\n            ></SubTimer>\n        {/each}\n</div>\n\n<style>\n    div {\n        position: relative;\n        outline: 1px solid black;\n        width: fit-content;\n        margin: 10px;\n        padding:10px;\n    }\n    h2 {\n        margin-bottom: 0;\n    }\n    h5 {\n        margin-top: 1em;\n    }\n    #exit {\n        position:absolute;\n        right: 5px;\n        top: 5px;\n        width: 2rem;\n        font-size: 12px;\n        font-weight: bold;\n    }\n</style>","<script>\n    import TimerCard from \"./TimerCard.svelte\";\n    export let cardsProps = [];\n\n    function deleteCard(index) {\n        cardsProps.splice(index,1)\n        cardsProps = cardsProps\n    }\n\n    setInterval(()=>{\n        console.log({cardsProps})\n    }, 1000)\n\n    function newCardProps() {\n        return {subTimersProps:[], groupName:\"\"}\n    }\n</script>\n\n<div id=\"root\">\n    {#each cardsProps as cp, i}\n        <TimerCard bind:groupName={cp.groupName} bind:subTimersProps={cp.subTimersProps} on:delete={()=>{deleteCard(i)}}></TimerCard>\n    {/each}\n    <div on:click={()=>{cardsProps = [...cardsProps, newCardProps()]}} id=\"new-card-container\">\n        <button id=\"add-btn\"><i class=\"fas fa-plus fa-1x\"></i></button>\n        <p style=\"margin: 2px; padding-bottom: 10px;\">Add Timer Card</p>\n    </div>\n</div>\n\n<style>\n    #root {\n\n    }\n    #new-card-container {\n        width: 200px;\n        background-color: grey;\n        text-align: center;\n        cursor: pointer;\n        margin: 10px;\n    }\n    #add-btn {\n        font-size:10em;\n        line-height: 1;\n        margin: 0;\n        padding: 0;\n        background: none;\n        outline: none;\n        border: none;\n    }\n</style>","/*!\n * JavaScript Cookie v2.2.1\n * https://github.com/js-cookie/js-cookie\n *\n * Copyright 2006, 2015 Klaus Hartl & Fagner Brack\n * Released under the MIT license\n */\n;(function (factory) {\n\tvar registeredInModuleLoader;\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(factory);\n\t\tregisteredInModuleLoader = true;\n\t}\n\tif (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t\tregisteredInModuleLoader = true;\n\t}\n\tif (!registeredInModuleLoader) {\n\t\tvar OldCookies = window.Cookies;\n\t\tvar api = window.Cookies = factory();\n\t\tapi.noConflict = function () {\n\t\t\twindow.Cookies = OldCookies;\n\t\t\treturn api;\n\t\t};\n\t}\n}(function () {\n\tfunction extend () {\n\t\tvar i = 0;\n\t\tvar result = {};\n\t\tfor (; i < arguments.length; i++) {\n\t\t\tvar attributes = arguments[ i ];\n\t\t\tfor (var key in attributes) {\n\t\t\t\tresult[key] = attributes[key];\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction decode (s) {\n\t\treturn s.replace(/(%[0-9A-Z]{2})+/g, decodeURIComponent);\n\t}\n\n\tfunction init (converter) {\n\t\tfunction api() {}\n\n\t\tfunction set (key, value, attributes) {\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tattributes = extend({\n\t\t\t\tpath: '/'\n\t\t\t}, api.defaults, attributes);\n\n\t\t\tif (typeof attributes.expires === 'number') {\n\t\t\t\tattributes.expires = new Date(new Date() * 1 + attributes.expires * 864e+5);\n\t\t\t}\n\n\t\t\t// We're using \"expires\" because \"max-age\" is not supported by IE\n\t\t\tattributes.expires = attributes.expires ? attributes.expires.toUTCString() : '';\n\n\t\t\ttry {\n\t\t\t\tvar result = JSON.stringify(value);\n\t\t\t\tif (/^[\\{\\[]/.test(result)) {\n\t\t\t\t\tvalue = result;\n\t\t\t\t}\n\t\t\t} catch (e) {}\n\n\t\t\tvalue = converter.write ?\n\t\t\t\tconverter.write(value, key) :\n\t\t\t\tencodeURIComponent(String(value))\n\t\t\t\t\t.replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);\n\n\t\t\tkey = encodeURIComponent(String(key))\n\t\t\t\t.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent)\n\t\t\t\t.replace(/[\\(\\)]/g, escape);\n\n\t\t\tvar stringifiedAttributes = '';\n\t\t\tfor (var attributeName in attributes) {\n\t\t\t\tif (!attributes[attributeName]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tstringifiedAttributes += '; ' + attributeName;\n\t\t\t\tif (attributes[attributeName] === true) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Considers RFC 6265 section 5.2:\n\t\t\t\t// ...\n\t\t\t\t// 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n\t\t\t\t//     character:\n\t\t\t\t// Consume the characters of the unparsed-attributes up to,\n\t\t\t\t// not including, the first %x3B (\";\") character.\n\t\t\t\t// ...\n\t\t\t\tstringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n\t\t\t}\n\n\t\t\treturn (document.cookie = key + '=' + value + stringifiedAttributes);\n\t\t}\n\n\t\tfunction get (key, json) {\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar jar = {};\n\t\t\t// To prevent the for loop in the first place assign an empty array\n\t\t\t// in case there are no cookies at all.\n\t\t\tvar cookies = document.cookie ? document.cookie.split('; ') : [];\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < cookies.length; i++) {\n\t\t\t\tvar parts = cookies[i].split('=');\n\t\t\t\tvar cookie = parts.slice(1).join('=');\n\n\t\t\t\tif (!json && cookie.charAt(0) === '\"') {\n\t\t\t\t\tcookie = cookie.slice(1, -1);\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tvar name = decode(parts[0]);\n\t\t\t\t\tcookie = (converter.read || converter)(cookie, name) ||\n\t\t\t\t\t\tdecode(cookie);\n\n\t\t\t\t\tif (json) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tcookie = JSON.parse(cookie);\n\t\t\t\t\t\t} catch (e) {}\n\t\t\t\t\t}\n\n\t\t\t\t\tjar[name] = cookie;\n\n\t\t\t\t\tif (key === name) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {}\n\t\t\t}\n\n\t\t\treturn key ? jar[key] : jar;\n\t\t}\n\n\t\tapi.set = set;\n\t\tapi.get = function (key) {\n\t\t\treturn get(key, false /* read as raw */);\n\t\t};\n\t\tapi.getJSON = function (key) {\n\t\t\treturn get(key, true /* read as json */);\n\t\t};\n\t\tapi.remove = function (key, attributes) {\n\t\t\tset(key, '', extend(attributes, {\n\t\t\t\texpires: -1\n\t\t\t}));\n\t\t};\n\n\t\tapi.defaults = {};\n\n\t\tapi.withConverter = init;\n\n\t\treturn api;\n\t}\n\n\treturn init(function () {});\n}));\n","<script>\n    export let heading = \"Default Heading\"\n    export let show = false;\n</script>\n\n{#if show}\n    <div class=\"dark-bg\">\n        <div class=\"popup\">\n            <div class=\"heading-container\">\n                <h1>{heading}</h1>\n            </div>\n            <div class=\"content\">\n                <slot></slot>\n            </div>\n            <div class=\"top-right\">\n                <button class=\"exit-button\" on:click={()=>{show = false}}>&times;</button>\n            </div>\n        </div>\n    </div>\n{/if}\n\n<style>\n    .content {\n        overflow: auto;\n    }\n    .dark-bg {\n        display:block;\n        position: fixed;\n        top:0;\n        background-color: rgba(0,0,0,0.75);\n        width: 100%;\n        height: 100%;\n        z-index: 2;\n    }\n    .heading-container {\n        border-bottom: 1px solid black;\n    }\n    .popup {\n        width: 95%;\n        height: 75%;\n        margin: 0 auto;\n        margin-top: 30px;\n        text-align: center;\n        background-color: white;\n        border: 2px solid black;\n        display: grid;\n        grid-template-rows: 70px 1fr;\n        position: relative;\n        padding:25px;\n    }\n    .top-right {\n        position: absolute;\n        right: 0;\n        top: 0;\n    }\n    .exit-button {\n        padding: 5px;\n        margin: 5px 5px;\n        box-sizing: border-box;\n        border: 1px solid #ccc;\n        border-radius: 2px;\n\n        color: white;\n        background-color: black;\n        outline: none;\n    }\n\n    .exit-button:hover {\n        filter:invert(1);\n    }\n</style>","<script>\n\timport CardArea from \"./CardArea.svelte\";\n\timport cookies from \"js-cookie\"\n\timport {lastCookieUpdate, loadedPage} from './store.js';\n\timport Modal from \"./Modal.svelte\";\n\timport About from \"./About.svelte\";\n\n\tlet showAbout = false\n\n\tlet currCookie = function () {\n\t\tlet c = cookies.get(\"cardsProps\") ?? \"[]\";\n\t\treturn JSON.parse(c);\n\t}()\n\n\tlet cardsProps = currCookie.cardsProps;\n\t$lastCookieUpdate = currCookie.lastUpdate;\n\n\tsetInterval(() => {\n\t\tcookies.set(\"cardsProps\", {cardsProps: cardsProps, lastUpdate: Date.now()}, {expires: 1000});\n\t}, 250)\n\n\t$loadedPage = true;\n</script>\n\n<main>\n\t<div>\n\t\t<h1>F0nkey's Split Timer Tool</h1>\n\t\t<Modal bind:show={showAbout} heading=\"About\">\n\t\t\t<About></About>\n\t\t</Modal>\n\t\t<button style=\"background-color:#42cc8c;\" on:click={()=>{showAbout = true}}>About</button>\n\t</div>\n\n\t<CardArea bind:cardsProps={cardsProps}></CardArea>\n</main>\n\n<style>\n\tdiv {\n\t\ttext-align: center;\n\t}\n\th1 {\n\t\tmargin-bottom: 20px;\n\t}\n\tbutton {\n\t\tdisplay: inline-block;\n\t\tpadding: 0.46em 1.6em;\n\t\tborder: 0.1em solid #000000;\n\t\tmargin: 0 0.2em 0.2em 0;\n\t\tborder-radius: 0.12em;\n\t\tbox-sizing: border-box;\n\t\ttext-decoration: none;\n\t\tfont-weight: 300;\n\t\tcolor: #000000;\n\t\ttext-shadow: 0 0.04em 0.04em rgba(0,0,0,0.35);\n\t\tbackground-color: #FFFFFF;\n\t\ttext-align: center;\n\t\ttransition: all 0.15s;\n\t}\n\tbutton:hover{\n\t\ttext-shadow: 0 0 2em rgba(255,255,255,1);\n\t\tcolor: #FFFFFF;\n\t\tborder-color: #FFFFFF;\n\t\tfont-weight: bold;\n\t}\n</style>","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'world'\n\t}\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","tar","src","k","assign","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","length","i","get_slot_changes","slot_context","p","set_store_value","ret","value","set","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","set_style","key","important","style","setProperty","current_component","set_current_component","get_current_component","Error","createEventDispatcher","type","detail","e","createEvent","initCustomEvent","custom_event","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","add_flush_callback","flushing","seen_callbacks","Set","flush","update","pop","has","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","bind","index","props","bound","create_component","mount_component","on_mount","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","parent_component","prop_values","context","Map","skip_bound","ready","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","indexOf","splice","$$props","obj","$$set","keys","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","lastCookieUpdate","loadedPage","dir","dispatch","activated","ms","kill","proportion","firstLoad","diff","Date","now","$lastCookieUpdate","amtToAdd","console","log","displaySeconds","pad","n","z","secs","mins","round","msToTime","killFunc","subTimersProps","groupName","displayTime","pause","timerProps","setInterval","activatedAmt","totalTime","secondsProportion","isNaN","timersProps","newTimerSeconds","timer","subtractBy","ceil","subtractProportional","displayAreYouSure","divAmount","confirm","cardsProps","deleteCard","cp","factory","extend","result","arguments","attributes","decode","replace","decodeURIComponent","converter","api","path","defaults","expires","toUTCString","JSON","stringify","test","write","encodeURIComponent","String","escape","stringifiedAttributes","attributeName","split","cookie","get","json","jar","cookies","parts","join","charAt","read","parse","getJSON","remove","withConverter","module","heading","show","showAbout","currCookie","lastUpdate","$loadedPage","body"],"mappings":"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"}